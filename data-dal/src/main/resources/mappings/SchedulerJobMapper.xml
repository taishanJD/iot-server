<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.data.dal.dao.SchedulerJobMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.data.model.dataobj.SchedulerJob">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_type" jdbcType="CHAR" property="jobType" />
    <result column="job_biz_type" jdbcType="CHAR" property="jobBizType" />
    <result column="job_biz_id" jdbcType="BIGINT" property="jobBizId" />
    <result column="is_frozen" jdbcType="CHAR" property="isFrozen" />
    <result column="is_notify" jdbcType="CHAR" property="isNotify" />
    <result column="is_publish" jdbcType="CHAR" property="isPublish" />
    <result column="interval_type" jdbcType="CHAR" property="intervalType" />
    <result column="interval_values" jdbcType="VARCHAR" property="intervalValues" />
    <result column="interval_hour" jdbcType="INTEGER" property="intervalHour" />
    <result column="interval_minute" jdbcType="INTEGER" property="intervalMinute" />
    <result column="valid_startdate" jdbcType="TIMESTAMP" property="validStartdate" />
    <result column="valid_enddate" jdbcType="TIMESTAMP" property="validEnddate" />
    <result column="start_hour" jdbcType="INTEGER" property="startHour" />
    <result column="start_minute" jdbcType="INTEGER" property="startMinute" />
    <result column="end_hour" jdbcType="INTEGER" property="endHour" />
    <result column="end_minute" jdbcType="INTEGER" property="endMinute" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="is_del" jdbcType="CHAR" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenant_id, job_name, job_type, job_biz_type, job_biz_id, is_frozen, is_notify, 
    is_publish, interval_type, interval_values, interval_hour, interval_minute, valid_startdate, 
    valid_enddate, start_hour, start_minute, end_hour, end_minute, create_time, update_time, 
    create_user, update_user, is_del
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scheduler_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scheduler_job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from scheduler_job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobExample">
    delete from scheduler_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.data.model.dataobj.SchedulerJob">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scheduler_job (tenant_id, job_name, job_type, 
      job_biz_type, job_biz_id, is_frozen, 
      is_notify, is_publish, interval_type, 
      interval_values, interval_hour, interval_minute, 
      valid_startdate, valid_enddate, start_hour, 
      start_minute, end_hour, end_minute, 
      create_time, update_time, create_user, 
      update_user, is_del)
    values (#{tenantId,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, #{jobType,jdbcType=CHAR}, 
      #{jobBizType,jdbcType=CHAR}, #{jobBizId,jdbcType=BIGINT}, #{isFrozen,jdbcType=CHAR}, 
      #{isNotify,jdbcType=CHAR}, #{isPublish,jdbcType=CHAR}, #{intervalType,jdbcType=CHAR}, 
      #{intervalValues,jdbcType=VARCHAR}, #{intervalHour,jdbcType=INTEGER}, #{intervalMinute,jdbcType=INTEGER}, 
      #{validStartdate,jdbcType=TIMESTAMP}, #{validEnddate,jdbcType=TIMESTAMP}, #{startHour,jdbcType=INTEGER}, 
      #{startMinute,jdbcType=INTEGER}, #{endHour,jdbcType=INTEGER}, #{endMinute,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=BIGINT}, #{isDel,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.data.model.dataobj.SchedulerJob">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scheduler_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="jobBizType != null">
        job_biz_type,
      </if>
      <if test="jobBizId != null">
        job_biz_id,
      </if>
      <if test="isFrozen != null">
        is_frozen,
      </if>
      <if test="isNotify != null">
        is_notify,
      </if>
      <if test="isPublish != null">
        is_publish,
      </if>
      <if test="intervalType != null">
        interval_type,
      </if>
      <if test="intervalValues != null">
        interval_values,
      </if>
      <if test="intervalHour != null">
        interval_hour,
      </if>
      <if test="intervalMinute != null">
        interval_minute,
      </if>
      <if test="validStartdate != null">
        valid_startdate,
      </if>
      <if test="validEnddate != null">
        valid_enddate,
      </if>
      <if test="startHour != null">
        start_hour,
      </if>
      <if test="startMinute != null">
        start_minute,
      </if>
      <if test="endHour != null">
        end_hour,
      </if>
      <if test="endMinute != null">
        end_minute,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobBizType != null">
        #{jobBizType,jdbcType=CHAR},
      </if>
      <if test="jobBizId != null">
        #{jobBizId,jdbcType=BIGINT},
      </if>
      <if test="isFrozen != null">
        #{isFrozen,jdbcType=CHAR},
      </if>
      <if test="isNotify != null">
        #{isNotify,jdbcType=CHAR},
      </if>
      <if test="isPublish != null">
        #{isPublish,jdbcType=CHAR},
      </if>
      <if test="intervalType != null">
        #{intervalType,jdbcType=CHAR},
      </if>
      <if test="intervalValues != null">
        #{intervalValues,jdbcType=VARCHAR},
      </if>
      <if test="intervalHour != null">
        #{intervalHour,jdbcType=INTEGER},
      </if>
      <if test="intervalMinute != null">
        #{intervalMinute,jdbcType=INTEGER},
      </if>
      <if test="validStartdate != null">
        #{validStartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="validEnddate != null">
        #{validEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="startHour != null">
        #{startHour,jdbcType=INTEGER},
      </if>
      <if test="startMinute != null">
        #{startMinute,jdbcType=INTEGER},
      </if>
      <if test="endHour != null">
        #{endHour,jdbcType=INTEGER},
      </if>
      <if test="endMinute != null">
        #{endMinute,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobExample" resultType="java.lang.Long">
    select count(*) from scheduler_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scheduler_job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=CHAR},
      </if>
      <if test="record.jobBizType != null">
        job_biz_type = #{record.jobBizType,jdbcType=CHAR},
      </if>
      <if test="record.jobBizId != null">
        job_biz_id = #{record.jobBizId,jdbcType=BIGINT},
      </if>
      <if test="record.isFrozen != null">
        is_frozen = #{record.isFrozen,jdbcType=CHAR},
      </if>
      <if test="record.isNotify != null">
        is_notify = #{record.isNotify,jdbcType=CHAR},
      </if>
      <if test="record.isPublish != null">
        is_publish = #{record.isPublish,jdbcType=CHAR},
      </if>
      <if test="record.intervalType != null">
        interval_type = #{record.intervalType,jdbcType=CHAR},
      </if>
      <if test="record.intervalValues != null">
        interval_values = #{record.intervalValues,jdbcType=VARCHAR},
      </if>
      <if test="record.intervalHour != null">
        interval_hour = #{record.intervalHour,jdbcType=INTEGER},
      </if>
      <if test="record.intervalMinute != null">
        interval_minute = #{record.intervalMinute,jdbcType=INTEGER},
      </if>
      <if test="record.validStartdate != null">
        valid_startdate = #{record.validStartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validEnddate != null">
        valid_enddate = #{record.validEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startHour != null">
        start_hour = #{record.startHour,jdbcType=INTEGER},
      </if>
      <if test="record.startMinute != null">
        start_minute = #{record.startMinute,jdbcType=INTEGER},
      </if>
      <if test="record.endHour != null">
        end_hour = #{record.endHour,jdbcType=INTEGER},
      </if>
      <if test="record.endMinute != null">
        end_minute = #{record.endMinute,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scheduler_job
    set id = #{record.id,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=CHAR},
      job_biz_type = #{record.jobBizType,jdbcType=CHAR},
      job_biz_id = #{record.jobBizId,jdbcType=BIGINT},
      is_frozen = #{record.isFrozen,jdbcType=CHAR},
      is_notify = #{record.isNotify,jdbcType=CHAR},
      is_publish = #{record.isPublish,jdbcType=CHAR},
      interval_type = #{record.intervalType,jdbcType=CHAR},
      interval_values = #{record.intervalValues,jdbcType=VARCHAR},
      interval_hour = #{record.intervalHour,jdbcType=INTEGER},
      interval_minute = #{record.intervalMinute,jdbcType=INTEGER},
      valid_startdate = #{record.validStartdate,jdbcType=TIMESTAMP},
      valid_enddate = #{record.validEnddate,jdbcType=TIMESTAMP},
      start_hour = #{record.startHour,jdbcType=INTEGER},
      start_minute = #{record.startMinute,jdbcType=INTEGER},
      end_hour = #{record.endHour,jdbcType=INTEGER},
      end_minute = #{record.endMinute,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      is_del = #{record.isDel,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.data.model.dataobj.SchedulerJob">
    update scheduler_job
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobBizType != null">
        job_biz_type = #{jobBizType,jdbcType=CHAR},
      </if>
      <if test="jobBizId != null">
        job_biz_id = #{jobBizId,jdbcType=BIGINT},
      </if>
      <if test="isFrozen != null">
        is_frozen = #{isFrozen,jdbcType=CHAR},
      </if>
      <if test="isNotify != null">
        is_notify = #{isNotify,jdbcType=CHAR},
      </if>
      <if test="isPublish != null">
        is_publish = #{isPublish,jdbcType=CHAR},
      </if>
      <if test="intervalType != null">
        interval_type = #{intervalType,jdbcType=CHAR},
      </if>
      <if test="intervalValues != null">
        interval_values = #{intervalValues,jdbcType=VARCHAR},
      </if>
      <if test="intervalHour != null">
        interval_hour = #{intervalHour,jdbcType=INTEGER},
      </if>
      <if test="intervalMinute != null">
        interval_minute = #{intervalMinute,jdbcType=INTEGER},
      </if>
      <if test="validStartdate != null">
        valid_startdate = #{validStartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="validEnddate != null">
        valid_enddate = #{validEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="startHour != null">
        start_hour = #{startHour,jdbcType=INTEGER},
      </if>
      <if test="startMinute != null">
        start_minute = #{startMinute,jdbcType=INTEGER},
      </if>
      <if test="endHour != null">
        end_hour = #{endHour,jdbcType=INTEGER},
      </if>
      <if test="endMinute != null">
        end_minute = #{endMinute,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.SchedulerJob">
    update scheduler_job
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=CHAR},
      job_biz_type = #{jobBizType,jdbcType=CHAR},
      job_biz_id = #{jobBizId,jdbcType=BIGINT},
      is_frozen = #{isFrozen,jdbcType=CHAR},
      is_notify = #{isNotify,jdbcType=CHAR},
      is_publish = #{isPublish,jdbcType=CHAR},
      interval_type = #{intervalType,jdbcType=CHAR},
      interval_values = #{intervalValues,jdbcType=VARCHAR},
      interval_hour = #{intervalHour,jdbcType=INTEGER},
      interval_minute = #{intervalMinute,jdbcType=INTEGER},
      valid_startdate = #{validStartdate,jdbcType=TIMESTAMP},
      valid_enddate = #{validEnddate,jdbcType=TIMESTAMP},
      start_hour = #{startHour,jdbcType=INTEGER},
      start_minute = #{startMinute,jdbcType=INTEGER},
      end_hour = #{endHour,jdbcType=INTEGER},
      end_minute = #{endMinute,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      is_del = #{isDel,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scheduler_job
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>