<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.data.dal.dao.DatasetSchemaMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.data.model.dataobj.DatasetSchema">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dataset_id" jdbcType="BIGINT" property="datasetId" />
    <result column="column_name" jdbcType="VARCHAR" property="columnName" />
    <result column="column_type" jdbcType="CHAR" property="columnType" />
    <result column="column_length" jdbcType="INTEGER" property="columnLength" />
    <result column="column_comment" jdbcType="VARCHAR" property="columnComment" />
    <result column="meaning" jdbcType="CHAR" property="meaning" />
    <result column="sub_meaning" jdbcType="CHAR" property="subMeaning" />
    <result column="valid_proportion" jdbcType="REAL" property="validProportion" />
    <result column="invalid_proportion" jdbcType="REAL" property="invalidProportion" />
    <result column="null_proportion" jdbcType="REAL" property="nullProportion" />
    <result column="not_null_proportion" jdbcType="REAL" property="notNullProportion" />
    <result column="max_value" jdbcType="VARCHAR" property="maxValue" />
    <result column="min_value" jdbcType="VARCHAR" property="minValue" />
    <result column="avg_value" jdbcType="VARCHAR" property="avgValue" />
    <result column="max_length" jdbcType="VARCHAR" property="maxLength" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dataset_id, column_name, column_type, column_length, column_comment, meaning, 
    sub_meaning, valid_proportion, invalid_proportion, null_proportion, not_null_proportion, 
    max_value, min_value, avg_value, max_length
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.data.model.dataobj.DatasetSchemaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dataset_schema
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dataset_schema
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dataset_schema
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.data.model.dataobj.DatasetSchemaExample">
    delete from dataset_schema
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.data.model.dataobj.DatasetSchema">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dataset_schema (dataset_id, column_name, column_type, 
      column_length, column_comment, meaning, 
      sub_meaning, valid_proportion, invalid_proportion, 
      null_proportion, not_null_proportion, max_value, 
      min_value, avg_value, max_length
      )
    values (#{datasetId,jdbcType=BIGINT}, #{columnName,jdbcType=VARCHAR}, #{columnType,jdbcType=CHAR}, 
      #{columnLength,jdbcType=INTEGER}, #{columnComment,jdbcType=VARCHAR}, #{meaning,jdbcType=CHAR}, 
      #{subMeaning,jdbcType=CHAR}, #{validProportion,jdbcType=REAL}, #{invalidProportion,jdbcType=REAL}, 
      #{nullProportion,jdbcType=REAL}, #{notNullProportion,jdbcType=REAL}, #{maxValue,jdbcType=VARCHAR}, 
      #{minValue,jdbcType=VARCHAR}, #{avgValue,jdbcType=VARCHAR}, #{maxLength,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.data.model.dataobj.DatasetSchema">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dataset_schema
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="datasetId != null">
        dataset_id,
      </if>
      <if test="columnName != null">
        column_name,
      </if>
      <if test="columnType != null">
        column_type,
      </if>
      <if test="columnLength != null">
        column_length,
      </if>
      <if test="columnComment != null">
        column_comment,
      </if>
      <if test="meaning != null">
        meaning,
      </if>
      <if test="subMeaning != null">
        sub_meaning,
      </if>
      <if test="validProportion != null">
        valid_proportion,
      </if>
      <if test="invalidProportion != null">
        invalid_proportion,
      </if>
      <if test="nullProportion != null">
        null_proportion,
      </if>
      <if test="notNullProportion != null">
        not_null_proportion,
      </if>
      <if test="maxValue != null">
        max_value,
      </if>
      <if test="minValue != null">
        min_value,
      </if>
      <if test="avgValue != null">
        avg_value,
      </if>
      <if test="maxLength != null">
        max_length,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="datasetId != null">
        #{datasetId,jdbcType=BIGINT},
      </if>
      <if test="columnName != null">
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnType != null">
        #{columnType,jdbcType=CHAR},
      </if>
      <if test="columnLength != null">
        #{columnLength,jdbcType=INTEGER},
      </if>
      <if test="columnComment != null">
        #{columnComment,jdbcType=VARCHAR},
      </if>
      <if test="meaning != null">
        #{meaning,jdbcType=CHAR},
      </if>
      <if test="subMeaning != null">
        #{subMeaning,jdbcType=CHAR},
      </if>
      <if test="validProportion != null">
        #{validProportion,jdbcType=REAL},
      </if>
      <if test="invalidProportion != null">
        #{invalidProportion,jdbcType=REAL},
      </if>
      <if test="nullProportion != null">
        #{nullProportion,jdbcType=REAL},
      </if>
      <if test="notNullProportion != null">
        #{notNullProportion,jdbcType=REAL},
      </if>
      <if test="maxValue != null">
        #{maxValue,jdbcType=VARCHAR},
      </if>
      <if test="minValue != null">
        #{minValue,jdbcType=VARCHAR},
      </if>
      <if test="avgValue != null">
        #{avgValue,jdbcType=VARCHAR},
      </if>
      <if test="maxLength != null">
        #{maxLength,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.data.model.dataobj.DatasetSchemaExample" resultType="java.lang.Long">
    select count(*) from dataset_schema
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dataset_schema
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.datasetId != null">
        dataset_id = #{record.datasetId,jdbcType=BIGINT},
      </if>
      <if test="record.columnName != null">
        column_name = #{record.columnName,jdbcType=VARCHAR},
      </if>
      <if test="record.columnType != null">
        column_type = #{record.columnType,jdbcType=CHAR},
      </if>
      <if test="record.columnLength != null">
        column_length = #{record.columnLength,jdbcType=INTEGER},
      </if>
      <if test="record.columnComment != null">
        column_comment = #{record.columnComment,jdbcType=VARCHAR},
      </if>
      <if test="record.meaning != null">
        meaning = #{record.meaning,jdbcType=CHAR},
      </if>
      <if test="record.subMeaning != null">
        sub_meaning = #{record.subMeaning,jdbcType=CHAR},
      </if>
      <if test="record.validProportion != null">
        valid_proportion = #{record.validProportion,jdbcType=REAL},
      </if>
      <if test="record.invalidProportion != null">
        invalid_proportion = #{record.invalidProportion,jdbcType=REAL},
      </if>
      <if test="record.nullProportion != null">
        null_proportion = #{record.nullProportion,jdbcType=REAL},
      </if>
      <if test="record.notNullProportion != null">
        not_null_proportion = #{record.notNullProportion,jdbcType=REAL},
      </if>
      <if test="record.maxValue != null">
        max_value = #{record.maxValue,jdbcType=VARCHAR},
      </if>
      <if test="record.minValue != null">
        min_value = #{record.minValue,jdbcType=VARCHAR},
      </if>
      <if test="record.avgValue != null">
        avg_value = #{record.avgValue,jdbcType=VARCHAR},
      </if>
      <if test="record.maxLength != null">
        max_length = #{record.maxLength,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dataset_schema
    set id = #{record.id,jdbcType=BIGINT},
      dataset_id = #{record.datasetId,jdbcType=BIGINT},
      column_name = #{record.columnName,jdbcType=VARCHAR},
      column_type = #{record.columnType,jdbcType=CHAR},
      column_length = #{record.columnLength,jdbcType=INTEGER},
      column_comment = #{record.columnComment,jdbcType=VARCHAR},
      meaning = #{record.meaning,jdbcType=CHAR},
      sub_meaning = #{record.subMeaning,jdbcType=CHAR},
      valid_proportion = #{record.validProportion,jdbcType=REAL},
      invalid_proportion = #{record.invalidProportion,jdbcType=REAL},
      null_proportion = #{record.nullProportion,jdbcType=REAL},
      not_null_proportion = #{record.notNullProportion,jdbcType=REAL},
      max_value = #{record.maxValue,jdbcType=VARCHAR},
      min_value = #{record.minValue,jdbcType=VARCHAR},
      avg_value = #{record.avgValue,jdbcType=VARCHAR},
      max_length = #{record.maxLength,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.data.model.dataobj.DatasetSchema">
    update dataset_schema
    <set>
      <if test="datasetId != null">
        dataset_id = #{datasetId,jdbcType=BIGINT},
      </if>
      <if test="columnName != null">
        column_name = #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnType != null">
        column_type = #{columnType,jdbcType=CHAR},
      </if>
      <if test="columnLength != null">
        column_length = #{columnLength,jdbcType=INTEGER},
      </if>
      <if test="columnComment != null">
        column_comment = #{columnComment,jdbcType=VARCHAR},
      </if>
      <if test="meaning != null">
        meaning = #{meaning,jdbcType=CHAR},
      </if>
      <if test="subMeaning != null">
        sub_meaning = #{subMeaning,jdbcType=CHAR},
      </if>
      <if test="validProportion != null">
        valid_proportion = #{validProportion,jdbcType=REAL},
      </if>
      <if test="invalidProportion != null">
        invalid_proportion = #{invalidProportion,jdbcType=REAL},
      </if>
      <if test="nullProportion != null">
        null_proportion = #{nullProportion,jdbcType=REAL},
      </if>
      <if test="notNullProportion != null">
        not_null_proportion = #{notNullProportion,jdbcType=REAL},
      </if>
      <if test="maxValue != null">
        max_value = #{maxValue,jdbcType=VARCHAR},
      </if>
      <if test="minValue != null">
        min_value = #{minValue,jdbcType=VARCHAR},
      </if>
      <if test="avgValue != null">
        avg_value = #{avgValue,jdbcType=VARCHAR},
      </if>
      <if test="maxLength != null">
        max_length = #{maxLength,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.DatasetSchema">
    update dataset_schema
    set dataset_id = #{datasetId,jdbcType=BIGINT},
      column_name = #{columnName,jdbcType=VARCHAR},
      column_type = #{columnType,jdbcType=CHAR},
      column_length = #{columnLength,jdbcType=INTEGER},
      column_comment = #{columnComment,jdbcType=VARCHAR},
      meaning = #{meaning,jdbcType=CHAR},
      sub_meaning = #{subMeaning,jdbcType=CHAR},
      valid_proportion = #{validProportion,jdbcType=REAL},
      invalid_proportion = #{invalidProportion,jdbcType=REAL},
      null_proportion = #{nullProportion,jdbcType=REAL},
      not_null_proportion = #{notNullProportion,jdbcType=REAL},
      max_value = #{maxValue,jdbcType=VARCHAR},
      min_value = #{minValue,jdbcType=VARCHAR},
      avg_value = #{avgValue,jdbcType=VARCHAR},
      max_length = #{maxLength,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dataset_schema
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>