<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.data.dal.dao.WorkflowNodeRelMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.data.model.dataobj.WorkflowNodeRel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="workflow_id" jdbcType="BIGINT" property="workflowId" />
    <result column="current_node_id" jdbcType="BIGINT" property="currentNodeId" />
    <result column="parent_node_id" jdbcType="BIGINT" property="parentNodeId" />
    <result column="is_del" jdbcType="CHAR" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, workflow_id, current_node_id, parent_node_id, is_del
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workflow_node_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from workflow_node_rel
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from workflow_node_rel
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRelExample">
    delete from workflow_node_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into workflow_node_rel (workflow_id, current_node_id, parent_node_id, 
      is_del)
    values (#{workflowId,jdbcType=BIGINT}, #{currentNodeId,jdbcType=BIGINT}, #{parentNodeId,jdbcType=BIGINT}, 
      #{isDel,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into workflow_node_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workflowId != null">
        workflow_id,
      </if>
      <if test="currentNodeId != null">
        current_node_id,
      </if>
      <if test="parentNodeId != null">
        parent_node_id,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workflowId != null">
        #{workflowId,jdbcType=BIGINT},
      </if>
      <if test="currentNodeId != null">
        #{currentNodeId,jdbcType=BIGINT},
      </if>
      <if test="parentNodeId != null">
        #{parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRelExample" resultType="java.lang.Long">
    select count(*) from workflow_node_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update workflow_node_rel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.workflowId != null">
        workflow_id = #{record.workflowId,jdbcType=BIGINT},
      </if>
      <if test="record.currentNodeId != null">
        current_node_id = #{record.currentNodeId,jdbcType=BIGINT},
      </if>
      <if test="record.parentNodeId != null">
        parent_node_id = #{record.parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update workflow_node_rel
    set id = #{record.id,jdbcType=BIGINT},
      workflow_id = #{record.workflowId,jdbcType=BIGINT},
      current_node_id = #{record.currentNodeId,jdbcType=BIGINT},
      parent_node_id = #{record.parentNodeId,jdbcType=BIGINT},
      is_del = #{record.isDel,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRel">
    update workflow_node_rel
    <set>
      <if test="workflowId != null">
        workflow_id = #{workflowId,jdbcType=BIGINT},
      </if>
      <if test="currentNodeId != null">
        current_node_id = #{currentNodeId,jdbcType=BIGINT},
      </if>
      <if test="parentNodeId != null">
        parent_node_id = #{parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.WorkflowNodeRel">
    update workflow_node_rel
    set workflow_id = #{workflowId,jdbcType=BIGINT},
      current_node_id = #{currentNodeId,jdbcType=BIGINT},
      parent_node_id = #{parentNodeId,jdbcType=BIGINT},
      is_del = #{isDel,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from workflow_node_rel
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>