<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.data.dal.dao.DatasetMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.data.model.dataobj.Dataset">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="datasource_id" jdbcType="BIGINT" property="datasourceId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="dataset_name" jdbcType="VARCHAR" property="datasetName" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="is_write" jdbcType="CHAR" property="isWrite" />
    <result column="is_sync" jdbcType="CHAR" property="isSync" />
    <result column="is_float_to_int" jdbcType="CHAR" property="isFloatToInt" />
    <result column="sample_type" jdbcType="CHAR" property="sampleType" />
    <result column="sample_type_value" jdbcType="INTEGER" property="sampleTypeValue" />
    <result column="is_sample_filter" jdbcType="CHAR" property="isSampleFilter" />
    <result column="sample_filter_type" jdbcType="CHAR" property="sampleFilterType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="sync_time" jdbcType="TIMESTAMP" property="syncTime" />
    <result column="data_count" jdbcType="BIGINT" property="dataCount" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.quarkdata.data.model.dataobj.Dataset">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, datasource_id, project_id, dataset_name, table_name, is_write, is_sync, is_float_to_int, 
    sample_type, sample_type_value, is_sample_filter, sample_filter_type, create_time, 
    update_time, create_user, update_user, sync_time, data_count
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.quarkdata.data.model.dataobj.DatasetExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.quarkdata.data.model.dataobj.DatasetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dataset
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.data.model.dataobj.DatasetExample">
    delete from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.data.model.dataobj.Dataset">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dataset (datasource_id, project_id, dataset_name, 
      table_name, is_write, is_sync, 
      is_float_to_int, sample_type, sample_type_value, 
      is_sample_filter, sample_filter_type, create_time, 
      update_time, create_user, update_user, 
      sync_time, data_count, description
      )
    values (#{datasourceId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{datasetName,jdbcType=VARCHAR}, 
      #{tableName,jdbcType=VARCHAR}, #{isWrite,jdbcType=CHAR}, #{isSync,jdbcType=CHAR}, 
      #{isFloatToInt,jdbcType=CHAR}, #{sampleType,jdbcType=CHAR}, #{sampleTypeValue,jdbcType=INTEGER}, 
      #{isSampleFilter,jdbcType=CHAR}, #{sampleFilterType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, 
      #{syncTime,jdbcType=TIMESTAMP}, #{dataCount,jdbcType=BIGINT}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.data.model.dataobj.Dataset">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dataset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="datasourceId != null">
        datasource_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="datasetName != null">
        dataset_name,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="isWrite != null">
        is_write,
      </if>
      <if test="isSync != null">
        is_sync,
      </if>
      <if test="isFloatToInt != null">
        is_float_to_int,
      </if>
      <if test="sampleType != null">
        sample_type,
      </if>
      <if test="sampleTypeValue != null">
        sample_type_value,
      </if>
      <if test="isSampleFilter != null">
        is_sample_filter,
      </if>
      <if test="sampleFilterType != null">
        sample_filter_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
      <if test="dataCount != null">
        data_count,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="datasourceId != null">
        #{datasourceId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="datasetName != null">
        #{datasetName,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="isWrite != null">
        #{isWrite,jdbcType=CHAR},
      </if>
      <if test="isSync != null">
        #{isSync,jdbcType=CHAR},
      </if>
      <if test="isFloatToInt != null">
        #{isFloatToInt,jdbcType=CHAR},
      </if>
      <if test="sampleType != null">
        #{sampleType,jdbcType=CHAR},
      </if>
      <if test="sampleTypeValue != null">
        #{sampleTypeValue,jdbcType=INTEGER},
      </if>
      <if test="isSampleFilter != null">
        #{isSampleFilter,jdbcType=CHAR},
      </if>
      <if test="sampleFilterType != null">
        #{sampleFilterType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataCount != null">
        #{dataCount,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.data.model.dataobj.DatasetExample" resultType="java.lang.Long">
    select count(*) from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dataset
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.datasourceId != null">
        datasource_id = #{record.datasourceId,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.datasetName != null">
        dataset_name = #{record.datasetName,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null">
        table_name = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.isWrite != null">
        is_write = #{record.isWrite,jdbcType=CHAR},
      </if>
      <if test="record.isSync != null">
        is_sync = #{record.isSync,jdbcType=CHAR},
      </if>
      <if test="record.isFloatToInt != null">
        is_float_to_int = #{record.isFloatToInt,jdbcType=CHAR},
      </if>
      <if test="record.sampleType != null">
        sample_type = #{record.sampleType,jdbcType=CHAR},
      </if>
      <if test="record.sampleTypeValue != null">
        sample_type_value = #{record.sampleTypeValue,jdbcType=INTEGER},
      </if>
      <if test="record.isSampleFilter != null">
        is_sample_filter = #{record.isSampleFilter,jdbcType=CHAR},
      </if>
      <if test="record.sampleFilterType != null">
        sample_filter_type = #{record.sampleFilterType,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataCount != null">
        data_count = #{record.dataCount,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dataset
    set id = #{record.id,jdbcType=BIGINT},
      datasource_id = #{record.datasourceId,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      dataset_name = #{record.datasetName,jdbcType=VARCHAR},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      is_write = #{record.isWrite,jdbcType=CHAR},
      is_sync = #{record.isSync,jdbcType=CHAR},
      is_float_to_int = #{record.isFloatToInt,jdbcType=CHAR},
      sample_type = #{record.sampleType,jdbcType=CHAR},
      sample_type_value = #{record.sampleTypeValue,jdbcType=INTEGER},
      is_sample_filter = #{record.isSampleFilter,jdbcType=CHAR},
      sample_filter_type = #{record.sampleFilterType,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      sync_time = #{record.syncTime,jdbcType=TIMESTAMP},
      data_count = #{record.dataCount,jdbcType=BIGINT},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dataset
    set id = #{record.id,jdbcType=BIGINT},
      datasource_id = #{record.datasourceId,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      dataset_name = #{record.datasetName,jdbcType=VARCHAR},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      is_write = #{record.isWrite,jdbcType=CHAR},
      is_sync = #{record.isSync,jdbcType=CHAR},
      is_float_to_int = #{record.isFloatToInt,jdbcType=CHAR},
      sample_type = #{record.sampleType,jdbcType=CHAR},
      sample_type_value = #{record.sampleTypeValue,jdbcType=INTEGER},
      is_sample_filter = #{record.isSampleFilter,jdbcType=CHAR},
      sample_filter_type = #{record.sampleFilterType,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      sync_time = #{record.syncTime,jdbcType=TIMESTAMP},
      data_count = #{record.dataCount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.data.model.dataobj.Dataset">
    update dataset
    <set>
      <if test="datasourceId != null">
        datasource_id = #{datasourceId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="datasetName != null">
        dataset_name = #{datasetName,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="isWrite != null">
        is_write = #{isWrite,jdbcType=CHAR},
      </if>
      <if test="isSync != null">
        is_sync = #{isSync,jdbcType=CHAR},
      </if>
      <if test="isFloatToInt != null">
        is_float_to_int = #{isFloatToInt,jdbcType=CHAR},
      </if>
      <if test="sampleType != null">
        sample_type = #{sampleType,jdbcType=CHAR},
      </if>
      <if test="sampleTypeValue != null">
        sample_type_value = #{sampleTypeValue,jdbcType=INTEGER},
      </if>
      <if test="isSampleFilter != null">
        is_sample_filter = #{isSampleFilter,jdbcType=CHAR},
      </if>
      <if test="sampleFilterType != null">
        sample_filter_type = #{sampleFilterType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataCount != null">
        data_count = #{dataCount,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.quarkdata.data.model.dataobj.Dataset">
    update dataset
    set datasource_id = #{datasourceId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      dataset_name = #{datasetName,jdbcType=VARCHAR},
      table_name = #{tableName,jdbcType=VARCHAR},
      is_write = #{isWrite,jdbcType=CHAR},
      is_sync = #{isSync,jdbcType=CHAR},
      is_float_to_int = #{isFloatToInt,jdbcType=CHAR},
      sample_type = #{sampleType,jdbcType=CHAR},
      sample_type_value = #{sampleTypeValue,jdbcType=INTEGER},
      is_sample_filter = #{isSampleFilter,jdbcType=CHAR},
      sample_filter_type = #{sampleFilterType,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      sync_time = #{syncTime,jdbcType=TIMESTAMP},
      data_count = #{dataCount,jdbcType=BIGINT},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.Dataset">
    update dataset
    set datasource_id = #{datasourceId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      dataset_name = #{datasetName,jdbcType=VARCHAR},
      table_name = #{tableName,jdbcType=VARCHAR},
      is_write = #{isWrite,jdbcType=CHAR},
      is_sync = #{isSync,jdbcType=CHAR},
      is_float_to_int = #{isFloatToInt,jdbcType=CHAR},
      sample_type = #{sampleType,jdbcType=CHAR},
      sample_type_value = #{sampleTypeValue,jdbcType=INTEGER},
      is_sample_filter = #{isSampleFilter,jdbcType=CHAR},
      sample_filter_type = #{sampleFilterType,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      sync_time = #{syncTime,jdbcType=TIMESTAMP},
      data_count = #{dataCount,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>