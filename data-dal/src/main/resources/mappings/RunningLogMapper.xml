<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.data.dal.dao.RunningLogMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.data.model.dataobj.RunningLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="father_type_id" jdbcType="INTEGER" property="fatherTypeId" />
    <result column="node_id" jdbcType="BIGINT" property="nodeId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.quarkdata.data.model.dataobj.RunningLog">
    <result column="log_content" jdbcType="LONGVARCHAR" property="logContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, type_id, father_type_id, node_id
  </sql>
  <sql id="Blob_Column_List">
    log_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.quarkdata.data.model.dataobj.RunningLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from running_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.quarkdata.data.model.dataobj.RunningLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from running_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from running_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from running_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.data.model.dataobj.RunningLogExample">
    delete from running_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.data.model.dataobj.RunningLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into running_log (type, type_id, father_type_id, 
      node_id, log_content)
    values (#{type,jdbcType=CHAR}, #{typeId,jdbcType=BIGINT}, #{fatherTypeId,jdbcType=INTEGER}, 
      #{nodeId,jdbcType=BIGINT}, #{logContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.data.model.dataobj.RunningLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into running_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="fatherTypeId != null">
        father_type_id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="logContent != null">
        log_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="fatherTypeId != null">
        #{fatherTypeId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.data.model.dataobj.RunningLogExample" resultType="java.lang.Long">
    select count(*) from running_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update running_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.fatherTypeId != null">
        father_type_id = #{record.fatherTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=BIGINT},
      </if>
      <if test="record.logContent != null">
        log_content = #{record.logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update running_log
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=CHAR},
      type_id = #{record.typeId,jdbcType=BIGINT},
      father_type_id = #{record.fatherTypeId,jdbcType=INTEGER},
      node_id = #{record.nodeId,jdbcType=BIGINT},
      log_content = #{record.logContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update running_log
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=CHAR},
      type_id = #{record.typeId,jdbcType=BIGINT},
      father_type_id = #{record.fatherTypeId,jdbcType=INTEGER},
      node_id = #{record.nodeId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.data.model.dataobj.RunningLog">
    update running_log
    <set>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="fatherTypeId != null">
        father_type_id = #{fatherTypeId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="logContent != null">
        log_content = #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.quarkdata.data.model.dataobj.RunningLog">
    update running_log
    set type = #{type,jdbcType=CHAR},
      type_id = #{typeId,jdbcType=BIGINT},
      father_type_id = #{fatherTypeId,jdbcType=INTEGER},
      node_id = #{nodeId,jdbcType=BIGINT},
      log_content = #{logContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.RunningLog">
    update running_log
    set type = #{type,jdbcType=CHAR},
      type_id = #{typeId,jdbcType=BIGINT},
      father_type_id = #{fatherTypeId,jdbcType=INTEGER},
      node_id = #{nodeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from running_log
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>