<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.data.dal.dao.SchedulerJobResponsibleMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.data.model.dataobj.SchedulerJobResponsible">
    <id column="scheduler_job_id" jdbcType="BIGINT" property="schedulerJobId" />
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    scheduler_job_id, user_id, user_name
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsibleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scheduler_job_responsible
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsibleKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scheduler_job_responsible
    where scheduler_job_id = #{schedulerJobId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsibleKey">
    delete from scheduler_job_responsible
    where scheduler_job_id = #{schedulerJobId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsibleExample">
    delete from scheduler_job_responsible
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsible">
    insert into scheduler_job_responsible (scheduler_job_id, user_id, user_name
      )
    values (#{schedulerJobId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsible">
    insert into scheduler_job_responsible
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schedulerJobId != null">
        scheduler_job_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schedulerJobId != null">
        #{schedulerJobId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsibleExample" resultType="java.lang.Long">
    select count(*) from scheduler_job_responsible
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scheduler_job_responsible
    <set>
      <if test="record.schedulerJobId != null">
        scheduler_job_id = #{record.schedulerJobId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scheduler_job_responsible
    set scheduler_job_id = #{record.schedulerJobId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsible">
    update scheduler_job_responsible
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where scheduler_job_id = #{schedulerJobId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsible">
    update scheduler_job_responsible
    set user_name = #{userName,jdbcType=VARCHAR}
    where scheduler_job_id = #{schedulerJobId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="com.quarkdata.data.model.dataobj.SchedulerJobResponsibleKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scheduler_job_responsible
    where scheduler_job_id = #{schedulerJobId,jdbcType=BIGINT} for update
      and user_id = #{userId,jdbcType=BIGINT} for update
  </select>
</mapper>